const { execSync } = require('child_process');
const { PrismaClient } = require('@prisma/client');

async function startProduction() {
  try {
    console.log('üöÄ D√©marrage de l\'application en production...');
    
    // V√©rifier la connexion √† la base de donn√©es
    const prisma = new PrismaClient();
    await prisma.$connect();
    console.log('‚úÖ Connexion √† la base de donn√©es √©tablie');
    
    // V√©rifier si l'utilisateur admin existe
    const admin = await prisma.user.findUnique({
      where: { email: 'admin@example.com' }
    });
    
    if (!admin) {
      console.log('‚ö†Ô∏è  Utilisateur admin non trouv√©, ex√©cution du seed...');
      try {
        execSync('npm run prisma:seed', { stdio: 'inherit' });
        console.log('‚úÖ Seed ex√©cut√© avec succ√®s');
      } catch (error) {
        console.error('‚ùå Erreur lors de l\'ex√©cution du seed:', error.message);
      }
    } else {
      console.log('‚úÖ Utilisateur admin trouv√©');
    }
    
    await prisma.$disconnect();
    
    // D√©marrer l'application
    console.log('üéØ D√©marrage de l\'application NestJS...');
    require('./dist/src/main');
    
  } catch (error) {
    console.error('‚ùå Erreur lors du d√©marrage:', error);
    process.exit(1);
  }
}

startProduction();

